apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    component: cloud-controller-manager
    k8s-addon: gcp-cloud-controller.addons.k8s.io
  name: cloud-controller-manager
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: cloud-controller-manager
  template:
    metadata:
      labels:
        component: cloud-controller-manager
        tier: control-plane
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      containers:
      - args:
        - --allocate-node-cidrs=true
        - --cidr-allocator-type=CloudAllocator
        - --cluster-cidr=100.96.0.0/11
        - --cluster-name=k3s-server-1
        - --enable-leader-migration=true
        - --leader-elect=true
        - --v=2
        - --cloud-provider=gce
        - --use-service-account-credentials=true
        - --cloud-config=/etc/kubernetes/cloud.config
        command:
        - /usr/local/bin/cloud-controller-manager
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: 127.0.0.1
        image: k8scloudprovidergcp/cloud-controller-manager:latest@sha256:881fd1095937638040723973ade90e6700f1c831a78fb585a3227c4d021b0df9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 10258
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        name: cloud-controller-manager
        resources:
          requests:
            cpu: 200m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kubernetes/cloud.config
          name: cloudconfig
          readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: cloud-controller-manager
      serviceAccountName: cloud-controller-manager
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - hostPath:
          path: /etc/kubernetes/cloud.config
          type: ""
        name: cloudconfig
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate

